// Generated by CoffeeScript 1.6.3
var _ref, _ref1,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Raffler.Views.EntriesIndex = (function(_super) {
  __extends(EntriesIndex, _super);

  function EntriesIndex() {
    _ref = EntriesIndex.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  EntriesIndex.prototype.template = _.template($('#item-template').html());

  EntriesIndex.prototype.events = {
    'click #newvalue': 'createEntry',
    'click #draw': 'drawWinner',
    'click li': 'kill'
  };

  EntriesIndex.prototype.initialize = function() {
    this.collection.on('sync', this.render, this);
    this.collection.on('add', this.render, this);
    return this.collection.on('destroy', this.render, this);
  };

  EntriesIndex.prototype.render = function() {
    this.$el.html(this.template({
      entries: this.collection.toJSON()
    }));
    return this;
  };

  EntriesIndex.prototype.createEntry = function() {
    return this.collection.create({
      name: $('#new_entry').val()
    });
  };

  EntriesIndex.prototype.drawWinner = function() {
    var winner;
    winner = this.collection.shuffle()[0];
    if (winner) {
      winner.set({
        winner: true
      });
      return winner.save();
    }
  };

  EntriesIndex.prototype.kill = function(ev) {
    var item;
    console.log($(ev.target).attr('id'));
    item = this.collection.find(function(model) {
      return model.get("id") === $(ev.target).attr('id');
    });
    return item.destroy();
  };

  return EntriesIndex;

})(Backbone.View);

Raffler.Routers.Entries = (function(_super) {
  __extends(Entries, _super);

  function Entries() {
    _ref1 = Entries.__super__.constructor.apply(this, arguments);
    return _ref1;
  }

  Entries.prototype.routes = {
    '': 'index',
    'entries/:id': 'show'
  };

  Entries.prototype.initialize = function() {
    this.collection = new Raffler.Collections.Entries();
    return this.collection.fetch();
  };

  Entries.prototype.index = function() {
    var view;
    view = new Raffler.Views.EntriesIndex({
      collection: this.collection
    });
    return $('#container').html(view.render().el);
  };

  Entries.prototype.show = function(id) {
    return console.log("Entry " + id);
  };

  return Entries;

})(Backbone.Router);
