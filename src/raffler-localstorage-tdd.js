// Generated by CoffeeScript 1.6.3
var Raffler;

Raffler = (function() {
  function Raffler() {
    this.names = [];
    this.totalCount = 0;
  }

  Raffler.prototype.createEntry = function(id, name, winner) {
    if (winner == null) {
      winner = false;
    }
    this.names.push({
      id: id,
      name: name,
      winner: winner
    });
    return this.totalCount++;
  };

  Raffler.prototype.deleteEntry = function(name) {
    var entry, nameLoc, _i, _len, _ref;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      if (entry.id.id === name.id) {
        nameLoc = this.getNameIndex(name);
        this.names.splice(nameLoc, 1);
        return true;
      }
    }
    return false;
  };

  Raffler.prototype.getNameIndex = function(name) {
    var count, entry, _i, _len, _ref;
    count = 0;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      if (entry.id.id === name.id) {
        return count;
      }
      count++;
    }
    return -1;
  };

  Raffler.prototype.nameExists = function(name) {
    var entry, _i, _len, _ref;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      if (entry.id.id === name.id && entry.id.name === name.name) {
        return true;
      }
    }
    return false;
  };

  Raffler.prototype.winnerStatus = function(name) {
    var entry, _i, _len, _ref;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      if (entry.id.id === name.id && entry.id.winner === true) {
        return true;
      }
    }
    return false;
  };

  Raffler.prototype.setWinner = function(name) {
    var entry, _i, _j, _len, _len1, _ref, _ref1;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      if (entry.id.id === name.id) {
        entry.id.winner = true;
      }
    }
    _ref1 = this.names;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      entry = _ref1[_j];
      if (entry.id.id === name.id && entry.id.winner === true) {
        return true;
      }
    }
    return false;
  };

  Raffler.prototype.resetWinners = function() {
    var entry, _i, _j, _len, _len1, _ref, _ref1;
    _ref = this.names;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      entry = _ref[_i];
      entry.id.winner = false;
    }
    _ref1 = this.names;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      entry = _ref1[_j];
      if (entry.id.winner === false) {
        return true;
      }
    }
    return false;
  };

  Raffler.prototype.drawWinner = function() {
    var winner;
    winner = this.names.shuffle()[0];
    if (winner) {
      winner.winner = true;
      return true;
    }
    return false;
  };

  (function() {
    var _base;
    return (_base = Array.prototype).shuffle != null ? (_base = Array.prototype).shuffle : _base.shuffle = function() {
      var i, j, _i, _ref, _ref1;
      for (i = _i = _ref = this.length - 1; _ref <= 1 ? _i <= 1 : _i >= 1; i = _ref <= 1 ? ++_i : --_i) {
        j = Math.floor(Math.random() * (i + 1));
        _ref1 = [this[j], this[i]], this[i] = _ref1[0], this[j] = _ref1[1];
      }
      return this;
    };
  })();

  return Raffler;

})();

window.Raffler = Raffler;
